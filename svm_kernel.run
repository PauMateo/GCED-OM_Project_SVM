# FITXER RUN SVM. LAB ASSIGNMENT OM
# GABRIEL FORTUNY I PAU MATEO
# Curs 2023-24 Q2

# $> ampl: include svm_kernel.run;

# OPTIMITZEM PEL CONJUNT TRAIN
# Resolem el dual
reset;
print "DUAL_SVM:";
model dual_svm_kernel.mod;
data "data/swiss_roll.dat";

option solver cplex;

problem DUAL_SVM: la, dual, c1;

option cplex_options 'timing=1';
solve DUAL_SVM;
display la;


# CALCULEM ELS RESULTATS AMB LES PREDICCIONS PEL CONJUNT TEST I CALCULEM L'ACCURACY
#busquem un punt que sigui Support Vector i ens guardem el seu Ã­ndex:


param idx_SV;
for {i in {1..m}} {
	if la[i] > 0.01 and la[i] < nu*0.99 then {
		# Quan es troba un valor que pertany al vector del SVM.
		let idx_SV := i;
		break;
	}
}

# Valors predits pel conjunt test:
param gamma;
let gamma := 1/y_train[idx_SV] - sum{j in {1..m}} la[j] * y_train[j] * 
			 exp(-(sum{k in {1..n}} (A_train[idx_SV,k] - A_train[j,k])^2) / (2 * sigma^2));
display gamma;

param prediction {1..m_test};
let {i in {1..m_test}} prediction[i] := gamma + sum{j in {1..m}} la[j] * y_train[j] * 
									exp(-(sum{k in {1..n}} (A_train[j,k] - A_test[i,k])^2) / (2 * sigma^2));
let {i in {1..m_test}} prediction[i] := if prediction[i] <= 0 then -1 else 1;
display prediction;

# Calculem els punts mal predits
param errors default 0;
for {i in {1..m_test}} {
	if prediction[i] != y_test[i] then
		let errors := errors + 1;
}

display errors;

param accuracy = (m - errors) / m;
display accuracy;

# https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_classification.html

